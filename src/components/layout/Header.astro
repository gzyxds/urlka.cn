---
// 优化后的菜单分类结构
// 1. 消除重复项目
// 2. 重新组织分类，使其更加合理
// 3. 按照用户使用频率和逻辑关系排序
// 4. 为每个子菜单项添加短介绍
const menuitems = [
  {
    title: "首页",
    path: "/#home",
  },
  {
    title: "飞利猫",
    path: "/feilimao",
  },
  {
    title: "产品服务",
    path: "javascript:void(0)",
    children: [
      { 
        title: "热门产品", 
        path: "/Product", 
        external: false,
        description: "精选热门产品，满足您的各种需求"
      },
      { 
        title: "知识库", 
        path: "/base", 
        external: false,
        description: "丰富的知识资源，助您快速上手"
      },
      { 
        title: "APP下载", 
        path: "/app", 
        external: false,
        description: "便捷的移动应用，随时随地使用"
      },
      { 
        title: "在线领卡", 
        path: "/card", 
        external: false,
        description: "快速在线办理，即时生效使用"
      },
      { 
        title: "飞利猫", 
        path: "/caict", 
        external: false,
        description: "专业的随身WiFi解决方案"
      },
    ],
  },
  {
    title: "服务中心",
    path: "javascript:void(0)",
    children: [
      { 
        title: "代理登入", 
        path: "/signup", 
        external: false,
        description: "代理商专用登录入口"
      },
      { 
        title: "订单查询", 
        path: "/OrderInquiry", 
        external: false,
        description: "快速查询订单状态和物流信息"
      },
      { 
        title: "在线客服", 
        path: "/online", 
        external: false,
        description: "7×24小时在线客服支持"
      },
      { 
        title: "常见问题", 
        path: "/fqa", 
        external: false,
        description: "常见问题解答，自助服务"
      },
      { 
        title: "在线留言", 
        path: "/message", 
        external: false,
        description: "在线留言反馈，及时响应"
      },
    ],
  },
  {
    title: "关于我们",
    path: "javascript:void(0)",
    children: [
      { 
        title: "公司介绍", 
        path: "/about", 
        external: false,
        description: "了解公司发展历程和企业文化"
      },
      { 
        title: "联系我们", 
        path: "/contact", 
        external: false,
        description: "多种联系方式，随时为您服务"
      },
      { 
        title: "加入我们", 
        path: "/join", 
        external: false,
        description: "优秀人才招聘，共创美好未来"
      },
      { 
        title: "合作伙伴", 
        path: "/partners", 
        external: false,
        description: "优质合作伙伴，共同发展"
      },
    ],
  },
  {
    title: "新闻资讯",
    path: "/blog",
  },
  {
    title: "合作产品",
    path: "javascript:void(0)",
    children: [
      { 
        title: "艺创官网", 
        path: "https://urlnet.cn", 
        external: true,
        description: "专业的网络服务提供商"
      },
      { 
        title: "数字分身", 
        path: "https://v.cnai.art", 
        external: true,
        description: "AI数字人技术领先平台"
      },
      { 
        title: "艺创AI", 
        path: "https://www.cnai.art", 
        external: true,
        description: "人工智能创新应用平台"
      },
      { 
        title: "优刻云", 
        path: "https://www.cloudcvm.com/", 
        external: true,
        description: "高性能云计算服务商"
      },
    ],
  },
];
---

<header x-data="
  {
    navbarOpen: false,
    showProductMenu: false,
    showServiceMenu: false,
    showAboutMenu: false,
    showPartnerMenu: false
  }
" class="sticky top-0 z-50 w-full bg-white dark:bg-black backdrop-blur-md transition-all duration-300 border-b border-gray-100 dark:border-blue-900/20">
  <div class="container mx-auto px-4 sm:px-6 lg:px-8">
    <div class="flex h-16 items-center justify-between">
      <!-- Logo -->
      <div class="flex items-center">
        <a href="/" class="flex items-center gap-3 py-2">
          <div class="flex items-center gap-3">
            <!-- Logo图标 -->
            <div class="w-10 h-10 rounded-lg flex items-center justify-center overflow-hidden">
              <img 
                src="/assets/logo/172.png" 
                alt="172号卡 Logo" 
                class="w-full h-full object-cover"
                width="40"
                height="40"
              />
            </div>
            <!-- 品牌名称 -->
            <div class="flex flex-col">
              <span class="text-xl font-bold text-gray-900 dark:text-white">172号卡</span>
              <span class="text-xs text-gray-500 dark:text-gray-400">智能通信专家</span>
            </div>
          </div>
        </a>
      </div>

      <!-- Desktop Navigation -->
      <nav class="hidden xl:flex xl:items-center xl:space-x-6">
        {
          menuitems.map((item, index) => {
            if(!item.children) {
              return (
                <a 
                  href={item.path}
                  class="nav-link"
                >
                  {item.title}
                </a>
              )
            }
          
            if(item.children) {
              const menuKey = item.title === "产品服务" ? "showProductMenu" : 
                             item.title === "服务中心" ? "showServiceMenu" :
                             item.title === "关于我们" ? "showAboutMenu" :
                             item.title === "合作产品" ? "showPartnerMenu" : "showMenu";
              
              return (
                <div class="relative group" 
                     @mouseenter={`${menuKey} = true`} 
                     @mouseleave={`${menuKey} = false`}
                     @click.outside={`${menuKey} = false`}>
                  <button @click={`${menuKey} = !${menuKey}`}
                    class="nav-link flex items-center">
                    {item.title}
                    <svg class="ml-1 h-3.5 w-3.5 transition-transform duration-200" 
                         :class={`${menuKey} ? 'rotate-180' : ''`}
                         fill="none" viewBox="0 0 24 24" stroke="currentColor">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7" />
                    </svg>
                  </button>
                  
                  <!-- Mega Menu Container -->
                  <div x-show={menuKey}
                       x-transition:enter="transition ease-out duration-200"
                       x-transition:enter-start="opacity-0 scale-95"
                       x-transition:enter-end="opacity-100 scale-100"
                       x-transition:leave="transition ease-in duration-150"
                       x-transition:leave-start="opacity-100 scale-100"
                       x-transition:leave-end="opacity-0 scale-95"
                       class="absolute left-0 mt-2 w-[800px] rounded-lg bg-white dark:bg-black shadow-lg ring-1 ring-black/5 dark:ring-white/10"
                       style="display: none;">
                    
                    <!-- Menu Header -->
                    <div class="rounded-t-lg bg-white p-5 dark:bg-black border-b border-gray-100 dark:border-blue-900/20">
                      <div class="mb-3">
                        <h4 class="mb-1 text-base font-medium text-black dark:text-white">
                          {item.title}
                        </h4>
                        <p class="text-xs text-gray-600 dark:text-gray-400">
                          {item.title === "产品服务" ? "探索我们的产品和服务，为您提供全方位的解决方案。" :
                           item.title === "服务中心" ? "专业的客户服务支持，随时为您提供帮助。" :
                           item.title === "关于我们" ? "了解我们的公司文化和发展历程。" :
                           item.title === "合作产品" ? "精选合作伙伴产品，为您提供更多选择。" : ""}
                        </p>
                      </div>
                      
                      <!-- Menu Items Grid -->
                      <div class="grid grid-cols-2 gap-3">
                        {item.children.map(childItem => (
                          <a 
                            href={childItem.path}
                            target={childItem.external ? "_blank" : "_self"}
                            rel={childItem.external ? "noopener noreferrer" : undefined}
                            class="group flex items-start space-x-3 p-3 rounded-md hover:bg-blue-50 dark:hover:bg-blue-900/10 transition-all duration-200"
                          >
                            <div class="flex-shrink-0 w-7 h-7 bg-blue-50 dark:bg-blue-900/20 rounded-md flex items-center justify-center mt-0.5">
                              {childItem.external ? (
                                <svg class="w-3.5 h-3.5 text-blue-500" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14" />
                                </svg>
                              ) : (
                                <svg class="w-3.5 h-3.5 text-blue-500" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7" />
                                </svg>
                              )}
                            </div>
                            <div class="flex-1 min-w-0">
                              <div class="font-medium text-black dark:text-white group-hover:text-blue-500 dark:group-hover:text-blue-400 transition-colors duration-200 mb-0.5">
                                {childItem.title}
                              </div>
                              <div class="text-xs text-gray-500 dark:text-gray-400 line-clamp-2">
                                {childItem.description}
                              </div>
                            </div>
                          </a>
                        ))}
                      </div>
                    </div>
                    
                    <!-- Menu Footer -->
                    <div class="rounded-b-lg bg-gray-50 px-5 py-3 border-t border-gray-100 dark:border-blue-900/20 dark:bg-blue-900/5">
                      <a href={item.title === "产品服务" ? "/Product" : 
                               item.title === "服务中心" ? "/online" :
                               item.title === "关于我们" ? "/about" :
                               item.title === "合作产品" ? "#" : "#"}
                         class="flex w-full items-center justify-center gap-2 text-xs font-medium text-blue-500 hover:text-blue-600 transition-colors">
                        查看全部{item.title}
                        <svg class="w-3.5 h-3.5 transition-transform group-hover:translate-x-1" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7" />
                        </svg>
                      </a>
                    </div>
                  </div>
                </div>
              )
            }
          })
        }
      </nav>

      <!-- Right Side Actions -->
      <div class="flex items-center space-x-3">
        <!-- Dark Mode Toggle -->
        <button 
          id="themeSwitcher"
          class="p-2 rounded-md hover:bg-gray-100 dark:hover:bg-blue-900/10 transition-colors duration-200"
          aria-label="切换暗黑模式"
        >
          <span class="hidden dark:block">
            <svg class="h-5 w-5 text-blue-400" fill="none" viewBox="0 0 24 24" stroke="currentColor">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M12 3v1m0 16v1m9-9h-1M4 12H3m15.364 6.364l-.707-.707M6.343 6.343l-.707-.707m12.728 0l-.707.707M6.343 17.657l-.707.707M16 12a4 4 0 11-8 0 4 4 0 018 0z" />
            </svg>
          </span>
          <span class="block dark:hidden">
            <svg class="h-5 w-5 text-blue-500" fill="none" viewBox="0 0 24 24" stroke="currentColor">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M20.354 15.354A9 9 0 018.646 3.646 9.003 9.003 0 0012 21a9.003 9.003 0 008.354-5.646z" />
            </svg>
          </span>
        </button>

        <!-- Auth Buttons -->
        <div class="flex flex-wrap justify-center xl:justify-start gap-3">
          <a 
            href="https://haoka.lot-ml.com/plugreg.html?agentid=90925"
            target="_blank"
            rel="noopener noreferrer"
            class="group hidden sm:inline-flex items-center px-5 py-2 bg-blue-500 hover:bg-blue-600 text-white font-medium rounded-md shadow-sm hover:shadow-md transition-all text-sm"
          >
            <span>注册</span>
          </a>
          
          <a 
            href="https://haoka.lot-ml.com/login.html"
            target="_blank"
            rel="noopener noreferrer"
            class="group hidden sm:inline-flex items-center px-5 py-2 bg-white dark:bg-blue-900/20 text-black dark:text-white font-medium rounded-md shadow-sm hover:shadow-md transition-all text-sm border border-gray-200 dark:border-blue-900/30"
          >
            <span>登入</span>
          </a>
        </div>
        
        <!-- Mobile Menu Button -->
        <button 
          @click="navbarOpen = !navbarOpen"
          :class="navbarOpen && 'navbarTogglerActive'"
          class="xl:hidden p-2 rounded-md hover:bg-gray-100 dark:hover:bg-blue-900/10 transition-colors duration-200"
          aria-label="切换菜单"
        >
          <span class="relative my-[6px] block h-[2px] w-[24px] bg-black dark:bg-white"></span>
          <span class="relative my-[6px] block h-[2px] w-[24px] bg-black dark:bg-white"></span>
          <span class="relative my-[6px] block h-[2px] w-[24px] bg-black dark:bg-white"></span>
        </button>
      </div>
    </div>
  </div>

  <!-- Mobile Menu -->
  <div 
    x-show="navbarOpen"
    x-transition:enter="transition ease-out duration-200"
    x-transition:enter-start="opacity-0 -translate-y-4"
    x-transition:enter-end="opacity-100 translate-y-0"
    x-transition:leave="transition ease-in duration-150"
    x-transition:leave-start="opacity-100 translate-y-0"
    x-transition:leave-end="opacity-0 -translate-y-4"
    class="xl:hidden fixed inset-x-0 top-16 z-50 w-full overflow-hidden bg-white dark:bg-black border-t border-gray-100 dark:border-blue-900/20"
    style="display: none;">
    <nav class="relative max-h-[calc(100vh-4rem)] overflow-y-auto p-4 space-y-3">
      <div class="space-y-2">
        {
          menuitems.map((item) => {
            if(!item.children) {
              return (
                <a href={item.path} class="mobile-nav-item">
                  {item.title}
                </a>
              )
            }
          
            if(item.children) {
              const mobileMenuKey = `mobile${item.title.replace(/\s+/g, '')}Menu`;
              return (
                <div class="space-y-1" x-data={`{ ${mobileMenuKey}: false }`}>
                  <div @click={`${mobileMenuKey} = !${mobileMenuKey}`} class="mobile-nav-item w-full flex items-center justify-between group cursor-pointer">
                    <span>{item.title}</span>
                    <svg class="h-4 w-4 transition-all duration-200" 
                         :class={`${mobileMenuKey} ? 'rotate-180' : ''`}
                         fill="none" viewBox="0 0 24 24" stroke="currentColor">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7" />
                    </svg>
                  </div>
                  
                  <div x-show={mobileMenuKey}
                       x-transition:enter="transition ease-out duration-200"
                       x-transition:enter-start="opacity-0 max-h-0"
                       x-transition:enter-end="opacity-100 max-h-96"
                       x-transition:leave="transition ease-in duration-150"
                       x-transition:leave-start="opacity-100 max-h-96"
                       x-transition:leave-end="opacity-0 max-h-0"
                       class="pt-1 pl-3 border-l-2 border-blue-100 dark:border-blue-900 overflow-hidden"
                       style="display: none;">
                    <div class="grid grid-cols-1 gap-1">
                      {item.children.map(childItem => (
                        <a 
                          href={childItem.path}
                          target={childItem.external ? "_blank" : "_self"}
                          rel={childItem.external ? "noopener noreferrer" : undefined}
                          class="mobile-menu-item"
                        >
                          <div class="flex flex-col">
                            <div class="flex items-center justify-between">
                              <span class="font-medium">{childItem.title}</span>
                              {childItem.external && (
                                <svg class="h-3.5 w-3.5 text-gray-400" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14" />
                                </svg>
                              )}
                            </div>
                            <div class="text-xs text-gray-500 dark:text-gray-400 mt-0.5">
                              {childItem.description}
                            </div>
                          </div>
                        </a>
                      ))}
                    </div>
                  </div>
                </div>
              )
            }
          })
        }
      </div>

      <!-- Mobile Auth Buttons -->
      <div class="pt-4 space-y-3">
        <a 
          href="https://haoka.lot-ml.com/plugreg.html?agentid=90925" 
          target="_blank"
          rel="noopener noreferrer"
          class="block w-full text-center px-4 py-2.5 rounded-md bg-blue-500 hover:bg-blue-600 text-white font-medium transition-colors duration-200 text-sm"
        >
          申请代理
        </a>
        <a 
          href="https://haoka.lot-ml.com/login.html" 
          target="_blank"
          rel="noopener noreferrer"
          class="block w-full text-center px-4 py-2.5 rounded-md border border-gray-200 dark:border-blue-900/30 hover:bg-gray-50 dark:hover:bg-blue-900/10 text-black dark:text-white font-medium transition-colors duration-200 text-sm"
        >
          登入
        </a>
      </div>
    </nav>
  </div>
</header>

<style>
  .nav-link {
    @apply px-2 xl:px-3 py-2 rounded-md text-gray-700 dark:text-gray-200 hover:text-blue-500 dark:hover:text-blue-400 font-medium transition-all duration-300 relative overflow-hidden text-sm;
  }

  .nav-link::after {
    content: '';
    @apply absolute bottom-0 left-0 w-full h-0.5 bg-blue-500 dark:bg-blue-400 transform scale-x-0 transition-transform duration-300 origin-left;
  }

  .nav-link:hover::after {
    @apply scale-x-100;
  }

  .menu-item {
    @apply flex items-center space-x-2 xl:space-x-3 p-2 rounded-md transition-all duration-300 hover:bg-blue-50 dark:hover:bg-blue-900/10;
  }

  .mobile-nav-item {
    @apply flex items-center justify-between w-full px-3 py-2.5 rounded-md text-gray-800 dark:text-gray-200 hover:text-blue-500 dark:hover:text-blue-400 transition-all duration-300 font-medium hover:translate-x-1 text-sm;
  }

  .mobile-menu-item {
    @apply flex items-center w-full px-3 py-2 rounded-md text-gray-700 dark:text-gray-300 hover:text-blue-500 dark:hover:text-blue-400 transition-all duration-300 hover:translate-x-1 text-sm;
  }

  .navbarTogglerActive > span:nth-child(1) {
    @apply transform rotate-45 translate-y-[7px];
  }

  .navbarTogglerActive > span:nth-child(2) {
    @apply opacity-0;
  }

  .navbarTogglerActive > span:nth-child(3) {
    @apply transform -rotate-45 -translate-y-[7px];
  }

  .line-clamp-2 {
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
</style>

<script is:inline>
  // 使用防抖函数优化滚动事件处理
  function debounce(func, wait) {
    let timeout;
    return function(...args) {
      clearTimeout(timeout);
      timeout = setTimeout(() => func.apply(this, args), wait);
    };
  }

  // 初始化变量
  let header;
  let lastScrollY = window.scrollY;
  let ticking = false;

  // 滚动处理函数
  function handleScroll() {
    if (!header) header = document.querySelector('header');
    if (!header) return;
    
    const currentScrollY = window.scrollY;
    
    if (!ticking) {
      window.requestAnimationFrame(() => {
        if (currentScrollY > 20) {
          header.classList.add('shadow-sm');
        } else {
          header.classList.remove('shadow-sm');
        }
        
        lastScrollY = currentScrollY;
        ticking = false;
      });
      
      ticking = true;
    }
  }

  // 使用防抖优化滚动事件
  const debouncedScroll = debounce(handleScroll, 10);
  
  // 添加滚动事件监听
  window.addEventListener('scroll', debouncedScroll, { passive: true });
  
  // DOM加载完成后初始化
  document.addEventListener('DOMContentLoaded', () => {
    header = document.querySelector('header');
    handleScroll();
  });
  
  // 初始检查滚动位置
  handleScroll();
</script>